// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicoDeEsterelizacao.Models;

namespace ServicoDeEsterelizacao.Migrations.ColaboradorDb
{
    [DbContext(typeof(ColaboradorDbContext))]
    [Migration("20181116101350_test1")]
    partial class test1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ServicoDeEsterelizacao.Models.AssistenteOperacional", b =>
                {
                    b.Property<int>("AssistenteOperacionalID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("AssistenteOperacionalID");

                    b.ToTable("AssistenteOperacional");
                });

            modelBuilder.Entity("ServicoDeEsterelizacao.Models.Colaborador", b =>
                {
                    b.Property<int>("AssisOperID");

                    b.Property<int>("DirID");

                    b.Property<int>("EnfermeiroID");

                    b.Property<int>("ColaboradorId");

                    b.Property<int>("Dest");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Funcao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Telefone")
                        .IsRequired();

                    b.HasKey("AssisOperID", "DirID", "EnfermeiroID");

                    b.HasIndex("DirID");

                    b.HasIndex("EnfermeiroID");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("ServicoDeEsterelizacao.Models.DiretorServico", b =>
                {
                    b.Property<int>("DiretorServicoID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("DiretorServicoID");

                    b.ToTable("DiretorServico");
                });

            modelBuilder.Entity("ServicoDeEsterelizacao.Models.Enfermeiros", b =>
                {
                    b.Property<int>("EnfermeirosID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("EnfermeirosID");

                    b.ToTable("Enfermeiros");
                });

            modelBuilder.Entity("ServicoDeEsterelizacao.Models.Horario", b =>
                {
                    b.Property<int>("HorarioID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("data");

                    b.HasKey("HorarioID");

                    b.ToTable("Horario");
                });

            modelBuilder.Entity("ServicoDeEsterelizacao.Models.Servico", b =>
                {
                    b.Property<int>("ServicoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColaboradorAssisOperID");

                    b.Property<int?>("ColaboradorDirID");

                    b.Property<int?>("ColaboradorEnfermeiroID");

                    b.Property<int>("ColaboradorID");

                    b.Property<int>("HorarioID");

                    b.Property<DateTime>("data");

                    b.HasKey("ServicoID");

                    b.HasIndex("HorarioID");

                    b.HasIndex("ColaboradorAssisOperID", "ColaboradorDirID", "ColaboradorEnfermeiroID");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("ServicoDeEsterelizacao.Models.Colaborador", b =>
                {
                    b.HasOne("ServicoDeEsterelizacao.Models.AssistenteOperacional", "AssistenteOperacional")
                        .WithMany("Colaborador")
                        .HasForeignKey("AssisOperID");

                    b.HasOne("ServicoDeEsterelizacao.Models.DiretorServico", "DirServico")
                        .WithMany("Colaborador")
                        .HasForeignKey("DirID");

                    b.HasOne("ServicoDeEsterelizacao.Models.Enfermeiros", "Enfermeiro")
                        .WithMany("Colaborador")
                        .HasForeignKey("EnfermeiroID");
                });

            modelBuilder.Entity("ServicoDeEsterelizacao.Models.Servico", b =>
                {
                    b.HasOne("ServicoDeEsterelizacao.Models.Horario", "Horario")
                        .WithMany("Servico")
                        .HasForeignKey("HorarioID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ServicoDeEsterelizacao.Models.Colaborador", "Colaborador")
                        .WithMany("Servico")
                        .HasForeignKey("ColaboradorAssisOperID", "ColaboradorDirID", "ColaboradorEnfermeiroID");
                });
#pragma warning restore 612, 618
        }
    }
}
